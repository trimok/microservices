# docker-compose.yml
version: "2.4"
services:
  # wait-for:
  # image : eficode/wait-for
  # networks:
  #   - bridge
  config-server:
    build:
      context: ./config-server/
      dockerfile: ./config-server/Dockerfile
    ports:
      - "9101:9101"
    image: config-server
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://config-server:9101/eureka-server/default" ]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - bridge
  eureka-server:
    build:
       context: ./eureka-server/
       dockerfile: ./eureka-server/Dockerfile
    ports:
       - "9102:9102"
    environment:
      CONFIG_SERVER_URL: http://config-server:9101
      EUREKA_SERVER: http://eureka-server:9102/eureka
    image: eureka-server
    depends_on:
     config-server:
      condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:9102" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bridge
  zuul-server:
    build:
      context: ./zuul-server/
      dockerfile: ./zuul-server/Dockerfile
    ports:
      - "9004:9004"
      - "9411:9411"
    environment:
      CONFIG_SERVER_URL: http://config-server:9101
      EUREKA_SERVER: http://eureka-server:9102/eureka
      ZIPKIN_BASE_URL: http://zuul_server:9411/
    image: zuul-server
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
          condition: service_healthy
    networks:
      - bridge
  microservice-produits:
    build:
      context: ./microservice-produits/
      dockerfile: ./microservice-produits/Dockerfile
    ports:
      - "9001:9001"
    environment:
      CONFIG_SERVER_URL: http://config-server:9101
      EUREKA_SERVER: http://eureka-server:9102/eureka
      ZIPKIN_BASE_URL: http://zuul_server:9411/
    image: microservice-produits
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      zuul-server:
          condition: service_started
    networks:
      - bridge
  clientui:
    build:
      context: ./clientui/
      dockerfile: ./clientui/Dockerfile
    ports:
      - "8080:8080"
    environment:
      CONFIG_SERVER_URL: http://config-server:9101
      EUREKA_SERVER: http://eureka-server:9102/eureka
      ZIPKIN_BASE_URL: http://zuul_server:9411/
    image: clientui
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      zuul-server:
        condition: service_started
      microservice-produits:
        condition: service_started
    networks:
      - bridge
networks:
  bridge:
    driver:
      bridge
